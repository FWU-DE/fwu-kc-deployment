# External
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "keycloak"
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "INGRESS_SESSION_ID"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/$ https://$host/auth/realms/vidis/protocol/openid-connect/auth?client_id=account-console&response_type=code&scope=openid&redirect_uri=https%3A%2F%2F$HOSTNAME%2Fauth%2Frealms%2Fvidis%2Faccount%2F%23%2F redirect;
      rewrite ^/auth$ https://$host/auth/realms/vidis/protocol/openid-connect/auth?client_id=account-console&response_type=code&scope=openid&redirect_uri=https%3A%2F%2F$HOSTNAME%2Fauth%2Frealms%2Fvidis%2Faccount%2F%23%2F redirect;
      rewrite ^/auth/$ https://$host/auth/realms/vidis/protocol/openid-connect/auth?client_id=account-console&response_type=code&scope=openid&redirect_uri=https%3A%2F%2F$HOSTNAME%2Fauth%2Frealms%2Fvidis%2Faccount%2F%23%2F redirect;
    cert-manager.io/cluster-issuer: letsencrypt
  labels:
    app: keycloak
spec:
  tls:
  - hosts:
    - ${HOSTNAME}
    secretName: le-secret-test
  rules:
    - host: ${HOSTNAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "keycloak-http"
                port:
                  number: 80
